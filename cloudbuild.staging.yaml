steps:
  # Install Git LFS and fetch LFS files
  - name: 'gcr.io/cloud-builders/git'
    entrypoint: bash
    args:
      - '-c'
      - |
        # Install Git LFS
        curl -s https://packagecloud.io/install/repositories/github/git-lfs/script.deb.sh | bash
        apt-get update && apt-get install -y git-lfs

        # Initialize and fetch LFS files
        git lfs install
        git lfs pull
  - name: node:20
    entrypoint: npm
    args: ['ci']
  - name: node:20
    entrypoint: npm
    args: ['run', 'build']
    env:
      - 'APP_ENV=staging'
      - 'NODE_ENV=production'
  - name: 'gcr.io/cloud-builders/gcloud'
    args: ['app', 'deploy']
  - name: 'gcr.io/cloud-builders/gcloud'
    entrypoint: bash
    args:
      - '-c'
      - |
        # Get all versions except the latest 5, sorted by creation time (oldest first)
        # Only include versions that are not serving traffic (traffic_split = 0)
        OLD_VERSIONS=$$(gcloud app versions list --format="table(version.id,traffic_split)" --sort-by="~creationTime" | tail -n +6 | awk '$$2 == "0.00" {print $$1}')

        # Delete old versions if any exist
        if [ ! -z "$$OLD_VERSIONS" ]; then
          echo "Deleting old versions with no traffic: $$OLD_VERSIONS"
          echo "$$OLD_VERSIONS" | xargs -I {} gcloud app versions delete {} --quiet
        else
          echo "No old versions with zero traffic to delete"
        fi
